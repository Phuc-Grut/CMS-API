// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using VFi.NetDevPack.Domain;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;

namespace VFi.Domain.CMS.Models
{
    public partial class Category : Entity, IAggregateRoot
    {
        public Category()
        {
            ContentCategoryMapping = new HashSet<ContentCategoryMapping>();
            InverseParentCategory = new HashSet<Category>();
        }

        public string Code { get; set; }
        public string Name { get; set; }
        public string Title { get; set; }
        public string FullName { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
        public string Image2 { get; set; }
        public string Image1 { get; set; }
        public string Url { get; set; }
        public Guid? ParentCategoryId { get; set; }
        public string Keywords { get; set; }
        public string JsonData { get; set; }
        public int Status { get; set; }
        public int DisplayOrder { get; set; }
        public DateTime CreatedDate { get; set; }
        public DateTime? UpdatedDate { get; set; }
        public Guid? CreatedBy { get; set; }
        public Guid? UpdatedBy { get; set; }
        public Guid? GroupCategoryId { get; set; }
        [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]
        public int IdNumber { get; set; }
        public string ParentIds { get; set; }
        public int? Level { get; set; }
        public string GroupCategoryCode { get; set; }
        public string GroupCategoryName { get; set; }
        public string CreatedByName { get; set; }
        public string UpdatedByName { get; set; }
        public string Slug { get; set; }
        public virtual GroupCategory GroupCategory { get; set; }
        public virtual Category ParentCategory { get; set; }
        public virtual ICollection<ContentCategoryMapping> ContentCategoryMapping { get; set; }
        public virtual ICollection<Category> InverseParentCategory { get; set; }
    }
}
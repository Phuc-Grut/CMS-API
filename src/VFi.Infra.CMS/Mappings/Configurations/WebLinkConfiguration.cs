// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.CMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.CMS.Mappings.Configurations
{
    public partial class WebLinkConfiguration : IEntityTypeConfiguration<WebLink>
    {
        public void Configure(EntityTypeBuilder<WebLink> entity)
        {
            entity.ToTable("WebLink", "dam");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.Code)
                .HasMaxLength(50);
                //.IsUnicode(false);

            entity.Property(e => e.CreatedByName).HasMaxLength(255);

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");

            entity.Property(e => e.FullName).HasMaxLength(1000);

            entity.Property(e => e.GroupWebLinkCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.GroupWebLinkName).HasMaxLength(255);

            entity.Property(e => e.Image).HasMaxLength(255);

            entity.Property(e => e.Image2).HasMaxLength(255);

            entity.Property(e => e.Image3).HasMaxLength(255);

            entity.Property(e => e.Keywords).HasMaxLength(1000);

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(400);

            entity.Property(e => e.ParentIds)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.Property(e => e.UpdatedByName).HasMaxLength(255);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.Property(e => e.Url).HasMaxLength(255);

            entity.HasOne(d => d.GroupWebLink)
                .WithMany(p => p.WebLink)
                .HasForeignKey(d => d.GroupWebLinkId)
                .HasConstraintName("FK_WebLink_Group_WebLink");

            entity.HasOne(d => d.ParentWebLink)
                .WithMany(p => p.InverseParentWebLink)
                .HasForeignKey(d => d.ParentWebLinkId)
                .HasConstraintName("FK_WebLink_WebLink");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WebLink> entity);
    }
}
